@page "/login"

@inject IAuthenticationManager AuthenticationManager
@inject NavigationManager NavigationManager
@inject IToastService ToastService


<div class="card">
    <div class="card-header">
        <h4>Форма авторизации</h4>
    </div>
    <div class="card-body">
        <EditForm Model="user" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator/>
            <div class="form-group">
                <label for="username">Имя пользователя</label>
                <InputText id="username" class="form-control" @bind-Value="user.UserName"/>
                <ValidationMessage For=@(()=>user.UserName)/>
            </div>
             <div class="form-group">
                <label for="password">Пароль</label>
                <InputText id="password" class="form-control" type="password" @bind-Value="user.Password"/>
                 <ValidationMessage For=@(()=>user.Password)/>
            </div>
            <div class="mt-3">
            <button class="btn btn-dark" type="submit">Войти</button>
        </div>
        </EditForm>
    </div>
</div>




@code {
    private LoginRequestDto user = new();

    private async void HandleLogin()
    {
        if(await AuthenticationManager.Login(user))
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            ToastService.ShowError(AuthenticationManager.ErrorMessage, ErrorType.AuthenticationError.ToString());
            AuthenticationManager.ErrorMessage = string.Empty; 
        }
    }
}