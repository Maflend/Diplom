@page "/register"

@inject IAuthenticationManager AuthManager
@inject NavigationManager NavigationManager
@*@inject IAuthService AuthService

@inject itoastservice toastservice*@




<div class="card">
    <div class="card-header">
        <h4>Форма регистрации</h4>
    </div>
    <div class="card-body">
        <EditForm Model="user" OnValidSubmit="HandleRegister">
        <DataAnnotationsValidator/>
        <div class="form-group">
            <label for="username">Имя пользователя</label>
            <InputText id="username" @bind-Value="user.UserName" class="form-control"></InputText>
            <ValidationMessage For="@(()=> user.UserName)"/>
        </div>
        <div class="form-group">
            <label for="age">Ваш возвраст</label>
            <InputNumber id="age" @bind-Value="user.Age" class="form-control"></InputNumber>
            <ValidationMessage For="@(()=> user.Age)"/>
        </div>
         <div class="form-group">
            <label for="password">Пароль</label>
            <InputText id="password "class="form-control" type="password" @bind-Value="user.Password" ></InputText>
            <ValidationMessage For="@(()=> user.Password)"/>
        </div>
         <div class="form-group">
            <label for="confirmPassword">Подтвердите пароль</label>
            <InputText id="confirmPassword" class="form-control" type="password" @bind-Value="user.ConfirmPassword" ></InputText>
            <ValidationMessage For="@(()=> user.ConfirmPassword)"/>
        </div>
        <div class="mt-3">
            <button class="btn btn-dark" type="submit">Создать аккаунт</button>
        </div>
    </EditForm>
    </div>
    
</div>


@code {
    private RegisterRequest user = new();


    private async void HandleRegister()
    {
        if(await AuthManager.Register(user))
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
           // ToastService.ShowError(AuthService.ErrorMessage,"Error registration :(");
            AuthManager.ErrorMessage = string.Empty; 
        }

    }
}
